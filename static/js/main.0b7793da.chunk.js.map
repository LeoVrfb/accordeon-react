{"version":3,"sources":["components/Data.js","components/Accordion.js","App.js","reportWebVitals.js","index.js"],"names":["Data","question","answer","AccordionSection","styled","div","Container","Wrap","Dropdown","Accordion","useState","clicked","setClicked","Provider","value","color","size","map","item","index","onClick","toggle","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qOAAaA,EAAO,CAClB,CACEC,SAAU,6DACVC,OAAQ,OAEV,CACED,SAAU,4DACVC,OAAQ,0BAEV,CACED,SAAU,8BACVC,OAAQ,Q,4BCLNC,EAAmBC,IAAOC,IAAV,2LAUhBC,EAAYF,IAAOC,IAAV,2HAMTE,EAAOH,IAAOC,IAAV,iTAoBJG,EAAWJ,IAAOC,IAAV,qTAsDCI,EArCG,WAChB,MAA8BC,oBAAS,GAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KAWA,OACE,cAAC,IAAYC,SAAb,CAAsBC,MAAO,CAAEC,MAAO,UAAWC,KAAM,QAAvD,SACE,cAACb,EAAD,UACE,cAACG,EAAD,UACGN,EAAKiB,KAAI,SAACC,EAAMC,GACf,OACE,qCACE,eAACZ,EAAD,CAAMa,QAAS,kBAhBd,SAAAD,GACb,GAAIR,IAAYQ,EAEd,OAAOP,EAAW,MAGpBA,EAAWO,GAUsBE,CAAOF,IAA5B,UACE,6BAAKD,EAAKjB,WACV,+BAAOU,IAAYQ,EAAQ,cAAC,IAAD,IAAc,cAAC,IAAD,QAFFA,GAIxCR,IAAYQ,EACX,cAACX,EAAD,UACE,4BAAIU,EAAKhB,WAET,kBC/ELoB,MAJf,WACE,OAAO,cAAC,EAAD,KCQMC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCFdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.0b7793da.chunk.js","sourcesContent":["export const Data = [\n  {\n    question: 'Quel est le nom du personnage principal du film \"Matrix\" ?',\n    answer: 'Neo'\n  },\n  {\n    question: 'Dans quel film Leonardo Dicaprio incarne t-il un Trader ?',\n    answer: 'Le loup de Wall Street'\n  },\n  {\n    question: 'Cet accordeon est-il cool ?',\n    answer: 'Oui'\n  }\n];\n","import React, { useState } from 'react';\nimport { Data } from './Data';\nimport styled from 'styled-components';\nimport { IconContext } from 'react-icons';\nimport { FiPlus, FiMinus } from 'react-icons/fi';\n\nconst AccordionSection = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  position: relative;\n  height: 100vh;\n  background: #fff;\n`;\n\nconst Container = styled.div`\n  position: absolute;\n  top: 30%;\n  box-shadow: 2px 10px 35px 1px rgba(153, 153, 153, 0.3);\n`;\n\nconst Wrap = styled.div`\n  background: #272727;\n  color: #fff;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  width: 100%;\n  text-align: center;\n  cursor: pointer;\n\n  h1 {\n    padding: 2rem;\n    font-size: 2rem;\n  }\n\n  span {\n    margin-right: 1.5rem;\n  }\n`;\n\nconst Dropdown = styled.div`\n  background: #1c1c1c;\n  color: #00ffb9;\n  width: 100%;\n  height: 100px;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  border-bottom: 1px solid #00ffb9;\n  border-top: 1px solid #00ffb9;\n\n  p {\n    font-size: 2rem;\n  }\n`;\n\nconst Accordion = () => {\n  const [clicked, setClicked] = useState(false);\n\n  const toggle = index => {\n    if (clicked === index) {\n      //if clicked question is already active, then close it\n      return setClicked(null);\n    }\n\n    setClicked(index);\n  };\n\n  return (\n    <IconContext.Provider value={{ color: '#00FFB9', size: '25px' }}>\n      <AccordionSection>\n        <Container>\n          {Data.map((item, index) => {\n            return (\n              <>\n                <Wrap onClick={() => toggle(index)} key={index}>\n                  <h1>{item.question}</h1>\n                  <span>{clicked === index ? <FiMinus /> : <FiPlus />}</span>\n                </Wrap>\n                {clicked === index ? (\n                  <Dropdown>\n                    <p>{item.answer}</p>\n                  </Dropdown>\n                ) : null}\n              </>\n            );\n          })}\n        </Container>\n      </AccordionSection>\n    </IconContext.Provider>\n  );\n};\n\nexport default Accordion;\n","import './App.css';\nimport Accordion from './components/Accordion';\n\nfunction App() {\n  return <Accordion />;\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}